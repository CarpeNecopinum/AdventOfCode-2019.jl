input = """
.#..#..##.#...###.#............#.
.....#..........##..#..#####.#..#
#....#...#..#.......#...........#
.#....#....#....#.#...#.#.#.#....
..#..#.....#.......###.#.#.##....
...#.##.###..#....#........#..#.#
..#.##..#.#.#...##..........#...#
..#..#.......................#..#
...#..#.#...##.#...#.#..#.#......
......#......#.....#.............
.###..#.#..#...#..#.#.......##..#
.#...#.................###......#
#.#.......#..####.#..##.###.....#
.#.#..#.#...##.#.#..#..##.#.#.#..
##...#....#...#....##....#.#....#
......#..#......#.#.....##..#.#..
##.###.....#.#.###.#..#..#..###..
#...........#.#..#..#..#....#....
..........#.#.#..#.###...#.....#.
...#.###........##..#..##........
.###.....#.#.###...##.........#..
#.#...##.....#.#.........#..#.###
..##..##........#........#......#
..####......#...#..........#.#...
......##...##.#........#...##.##.
.#..###...#.......#........#....#
...##...#..#...#..#..#.#.#...#...
....#......#.#............##.....
#......####...#.....#...#......#.
...#............#...#..#.#.#..#.#
.#...#....###.####....#.#........
#.#...##...#.##...#....#.#..##.#.
.#....#.###..#..##.#.##...#.#..##
"""


astmap = first.(reduce(hcat, split.(split(input), "")))
asteroids = [Tuple(i) .- 1 for i in CartesianIndices(astmap) if astmap[i] == '#']

function inclination(from, to)
    d = to .- from
    atan(d[2], d[1])
end

function best_base(asteroids)
    num_visible(ast) = length(unique(inclination(ast, other) for other in asteroids)) -1
    maximum((num_visible(ast), ast) for ast in asteroids)
end

using BenchmarkTools
@btime best_base(asteroids)

lazor = (23, 29)
directions = Dict{Float64,Vector{Tuple{Int,Int}}}[]

for ast in asteroids
    push!(directions[inclination(lazor, ast)]
end
